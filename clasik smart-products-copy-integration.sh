#!/bin/bash

# =====================================================
# üöÄ –£–ú–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –í –°–£–©–ï–°–¢–í–£–Æ–©–£–Æ PRODUCTS TABLE
# –†–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π ProductsPage –∑–∞ 30 —Å–µ–∫—É–Ω–¥
# =====================================================

echo "üöÄ –£–ú–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø..."
echo "üìã –ê–Ω–∞–ª–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ProductsPage"
echo "‚è∞ Time: 30 seconds"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"

# =====================================================
# 1. –°–û–ó–î–ê–ï–ú –ö–û–ú–ü–ê–ö–¢–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ö–ù–û–ü–ö–ò –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø
# =====================================================

echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ ProductCopyButton.tsx..."

mkdir -p frontend/src/pages/company/products/components

cat > frontend/src/pages/company/products/components/ProductCopyButton.tsx << 'EOF'
import React, { useState } from 'react';
import { api } from '../../../../api/axios';

interface ProductCopyButtonProps {
  productId: number;
  productName: string;
  onCopySuccess: () => void;
}

const ProductCopyButton: React.FC<ProductCopyButtonProps> = ({
  productId,
  productName,
  onCopySuccess
}) => {
  const [isLoading, setIsLoading] = useState(false);
  const [justCopied, setJustCopied] = useState(false);

  const handleCopy = async () => {
    if (isLoading) return;

    setIsLoading(true);
    
    try {
      const response = await api.post(`/api/company/products/${productId}/copy`);

      if (response.data.success) {
        setJustCopied(true);
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—Ö
        console.log(`–¢–æ–≤–∞—Ä "${productName}" —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!`);
        
        // –û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
        onCopySuccess();
        
        // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        setTimeout(() => setJustCopied(false), 2000);
      } else {
        throw new Error(response.data.message || '–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
      }

    } catch (error: any) {
      console.error('Copy error:', error);
      alert(`–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.response?.data?.error || error.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  if (justCopied) {
    return (
      <button
        className="text-green-600 hover:text-green-900 transition-colors cursor-default"
        title="–¢–æ–≤–∞—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!"
      >
        ‚úÖ
      </button>
    );
  }

  if (isLoading) {
    return (
      <button
        className="text-blue-400 cursor-not-allowed"
        disabled
        title="–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
      >
        ‚è≥
      </button>
    );
  }

  return (
    <button
      onClick={handleCopy}
      className="text-blue-600 hover:text-blue-900 transition-colors"
      title={`–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä "${productName}"`}
    >
      üìã
    </button>
  );
};

export default ProductCopyButton;
EOF

# =====================================================
# 2. –û–ë–ù–û–í–õ–Ø–ï–ú BACKEND CONTROLLER
# =====================================================

echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ backend controller..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ copyProduct —Ñ—É–Ω–∫—Ü–∏—è
if ! grep -q "copyProduct" backend/src/controllers/company/productsController.js; then
  echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ copyProduct —Ñ—É–Ω–∫—Ü–∏–∏..."
  
  # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é copyProduct –ø–µ—Ä–µ–¥ module.exports
  cat >> backend/src/controllers/company/productsController.js << 'EOF'

// =====================================================
// üîÑ –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –¢–û–í–ê–†–ê - –ë–´–°–¢–†–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø
// =====================================================
const copyProduct = async (req, res) => {
  try {
    const { id } = req.params;
    const companyId = req.companyContext.companyId;
    const userId = req.user?.id || 1;

    // –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä
    const originalProduct = await prismaManager.client.products.findFirst({
      where: {
        id: parseInt(id),
        company_id: companyId
      }
    });

    if (!originalProduct) {
      return res.status(404).json({
        success: false,
        error: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'
      });
    }

    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥
    const timestamp = Date.now();
    const newCode = `${originalProduct.code}_COPY_${timestamp}`;
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä
    const copiedProduct = await prismaManager.client.products.create({
      data: {
        code: newCode,
        name: `${originalProduct.name} (–ö–æ–ø–∏—è)`,
        description: originalProduct.description || '',
        unit: originalProduct.unit,
        price: originalProduct.price,
        cost_price: originalProduct.cost_price || originalProduct.price,
        currency: originalProduct.currency || 'EUR',
        vat_rate: originalProduct.vat_rate || 0,
        category: originalProduct.category || '',
        min_stock: originalProduct.min_stock || 0,
        current_stock: 0, // –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–æ–≤
        is_active: true,
        is_service: originalProduct.is_service || false,
        company_id: companyId,
        created_by: userId
      }
    });

    console.log(`‚úÖ Product copied: ${originalProduct.code} -> ${newCode}`);

    res.json({
      success: true,
      message: `–¢–æ–≤–∞—Ä "${originalProduct.name}" —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω`,
      data: copiedProduct
    });

  } catch (error) {
    console.error('‚ùå Copy product error:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞'
    });
  }
};
EOF

  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —ç–∫—Å–ø–æ—Ä—Ç—ã
  sed -i.bak 's/module\.exports = {/module.exports = {\n  copyProduct,/' backend/src/controllers/company/productsController.js
  echo "‚úÖ copyProduct —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞"
else
  echo "‚úÖ copyProduct —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# =====================================================
# 3. –ü–†–û–í–ï–†–Ø–ï–ú ROUTES
# =====================================================

echo "üõ£Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ routes..."

if ! grep -q "/copy" backend/src/routes/company/productsRoutes.js; then
  echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ copy route..."
  
  # –î–æ–±–∞–≤–ª—è–µ–º route –ø–µ—Ä–µ–¥ module.exports
  sed -i.bak '/module\.exports/i\
// üîÑ POST /api/company/products/:id/copy - –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä\
router.post("/:id/copy", productsController.copyProduct);\
' backend/src/routes/company/productsRoutes.js
  
  echo "‚úÖ Copy route –¥–æ–±–∞–≤–ª–µ–Ω"
else
  echo "‚úÖ Copy route —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# =====================================================
# 4. –°–û–ó–î–ê–ï–ú –ü–ê–¢–ß –î–õ–Ø PRODUCTSTABLE.TSX
# =====================================================

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ç—á–∞ –¥–ª—è ProductsTable.tsx..."

cat > frontend/src/pages/company/products/components/ProductsTable.patch << 'EOF'
--- a/frontend/src/pages/company/products/components/ProductsTable.tsx
+++ b/frontend/src/pages/company/products/components/ProductsTable.tsx
@@ -1,6 +1,7 @@
 // f/src/pages/company/products/components/ProductsTable.tsx
 import React, { useState } from 'react';
 import { ProductsTableProps, Product } from '../types/productsTypes';
+import ProductCopyButton from './ProductCopyButton';
 
 const ProductsTable: React.FC<ProductsTableProps> = ({
   products,
@@ -185,6 +186,12 @@
                 <td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                   <div className="flex items-center justify-center space-x-2">
                     <button
+                      <ProductCopyButton
+                        productId={product.id}
+                        productName={product.name}
+                        onCopySuccess={onRefresh}
+                      />
+                    
+                    <button
                       onClick={() => onEdit(product)}
                       className="text-blue-600 hover:text-blue-900 transition-colors"
                       title="Edit product"
EOF

# =====================================================
# 5. –°–û–ó–î–ê–ï–ú –ò–ù–°–¢–†–£–ö–¶–ò–Æ –†–£–ß–ù–û–ô –ò–ù–¢–ï–ì–†–ê–¶–ò–ò
# =====================================================

cat > MANUAL_INTEGRATION.md << 'EOF'
# üöÄ –†–£–ß–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ö–ù–û–ü–ö–ò –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø

## ‚úÖ –ß—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤–æ:
1. ProductCopyButton.tsx —Å–æ–∑–¥–∞–Ω
2. Backend copyProduct —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞  
3. Route POST /:id/copy –Ω–∞—Å—Ç—Ä–æ–µ–Ω

## üîß –†–£–ß–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø (30 —Å–µ–∫—É–Ω–¥):

### –í —Ñ–∞–π–ª–µ ProductsTable.tsx –¥–æ–±–∞–≤—å—Ç–µ:

1. **–ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞** (—Å—Ç—Ä–æ–∫–∞ 3):
```typescript
import ProductCopyButton from './ProductCopyButton';
```

2. **–í ACTIONS –∫–æ–ª–æ–Ω–∫–µ** (–æ–∫–æ–ª–æ —Å—Ç—Ä–æ–∫–∏ 186), –¥–æ–±–∞–≤—å—Ç–µ –ü–ï–†–ï–î –∫–Ω–æ–ø–∫–æ–π Edit:
```typescript
<ProductCopyButton
  productId={product.id}
  productName={product.name}
  onCopySuccess={onRefresh}
/>
```

### –†–µ–∑—É–ª—å—Ç–∞—Ç:
```typescript
<td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
  <div className="flex items-center justify-center space-x-2">
    {/* ‚ûï –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø */}
    <ProductCopyButton
      productId={product.id}
      productName={product.name}
      onCopySuccess={onRefresh}
    />
    
    {/* –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ */}
    <button
      onClick={() => onEdit(product)}
      className="text-blue-600 hover:text-blue-900 transition-colors"
      title="Edit product"
    >
      ‚úèÔ∏è
    </button>
    
    <button
      onClick={() => onDelete(product.id)}
      className="text-red-600 hover:text-red-900 transition-colors"
      title="Delete product"
    >
      üóëÔ∏è
    </button>
  </div>
</td>
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
1. –û—Ç–∫—Ä–æ–π—Ç–µ Products Management
2. –ù–∞–π–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É üìã –≤ –∫–æ–ª–æ–Ω–∫–µ ACTIONS
3. –ö–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
4. –¢–∞–±–ª–∏—Ü–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—Å—è

## üìã –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∞:
- –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST –∑–∞–ø—Ä–æ—Å –Ω–∞ `/api/company/products/:id/copy`
- –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é —Ç–æ–≤–∞—Ä–∞ —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º "(–ö–æ–ø–∏—è)" 
- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ —Å timestamp
- –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —É—Å–ø–µ—Ö–∞
EOF

# =====================================================
# 6. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò –†–ï–ó–£–õ–¨–¢–ê–¢
# =====================================================

echo ""
echo "‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "‚è∞ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ~30 —Å–µ–∫—É–Ω–¥"
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã:"
echo "  - frontend/src/pages/company/products/components/ProductCopyButton.tsx"
echo "  - MANUAL_INTEGRATION.md (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è)"
echo ""
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã:"
echo "  - backend/src/controllers/company/productsController.js (copyProduct —Ñ—É–Ω–∫—Ü–∏—è)"
echo "  - backend/src/routes/company/productsRoutes.js (copy route)"
echo ""
echo "üéØ –û–°–¢–ê–õ–û–°–¨ 30 –°–ï–ö–£–ù–î –†–£–ß–ù–û–ô –†–ê–ë–û–¢–´:"
echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ ProductsTable.tsx"
echo "  2. –î–æ–±–∞–≤—å—Ç–µ import ProductCopyButton"
echo "  3. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ ACTIONS –∫–æ–ª–æ–Ω–∫—É"
echo ""
echo "üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: MANUAL_INTEGRATION.md"
echo ""
echo "üöÄ –ö–û–°–ú–ò–ß–ï–°–ö–ò–ô –ö–û–†–ê–ë–õ–¨ –ì–û–¢–û–í! –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–û –í –°–£–©–ï–°–¢–í–£–Æ–©–£–Æ –ê–†–•–ò–¢–ï–ö–¢–£–†–£!"