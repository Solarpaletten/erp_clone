// =====================================================
// üõ£Ô∏è –ü–û–õ–ù–´–ï PRODUCTS ROUTES - –í–°–ï CRUD + –ö–û–ü–ò–†–û–í–ê–ù–ò–ï
// –§–∞–π–ª: b/src/routes/company/productsRoutes.js
// =====================================================

const express = require('express');
const router = express.Router();
const productsController = require('../../controllers/company/productsController');
const { logger } = require('../../config/logger');

// –î–æ–±–∞–≤–∏–º –æ—Ç–ª–∞–¥–∫—É
logger.info('üì¶ Products routes initialized');

// ===============================================
// üì¶ PRODUCTS ROUTES - Company Level
// ===============================================

// üìä GET /api/company/products/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
router.get('/stats', productsController.getProductsStats);

// üìã GET /api/company/products - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
router.get('/', productsController.getAllProducts);

// üìÑ GET /api/company/products/:id - –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ ID
router.get('/:id', productsController.getProductById);

// ‚ûï POST /api/company/products - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
router.post('/', productsController.createProduct);

// ‚úèÔ∏è PUT /api/company/products/:id - –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
router.put('/:id', productsController.updateProduct);

// üóëÔ∏è DELETE /api/company/products/:id - –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
router.delete('/:id', productsController.deleteProduct);

// ===============================================
// üöÄ "–í–û–ó–î–£–®–ù–ê–Ø –ë–£–•–ì–ê–õ–¢–ï–†–ò–Ø" - –ö–û–ü–ò–†–û–í–ê–ù–ò–ï
// ===============================================

// üîÑ POST /api/company/products/:id/copy - –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä
router.post('/:id/copy', productsController.copyProduct);

// ===============================================
// üß™ TEST ROUTE
// ===============================================

router.get('/test/health', (req, res) => {
  res.json({
    message: 'üì¶ Products API is working!',
    companyId: req.companyContext?.companyId || 'Not set',
    timestamp: new Date().toISOString(),
    endpoints: [
      'GET /api/company/products - List all products',
      'GET /api/company/products/stats - Products statistics',
      'GET /api/company/products/:id - Get product by ID',
      'POST /api/company/products - Create new product',
      'PUT /api/company/products/:id - Update product',
      'DELETE /api/company/products/:id - Delete product',
      'üöÄ POST /api/company/products/:id/copy - Copy product (AIRBORNE ACCOUNTING)'
    ],
    revolutionaryFeatures: [
      '‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
      'üõ°Ô∏è –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–º—è–≥–∫–æ–µ/–∂—ë—Å—Ç–∫–æ–µ)',
      'üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
      'üîÑ "–í–æ–∑–¥—É—à–Ω–∞—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è" –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è'
    ]
  });
});

module.exports = router;