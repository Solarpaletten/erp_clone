// =====================================================
// üî• –ú–ï–¢–û–î–û–õ–û–ì–ò–Ø "–ñ–ò–í–û–ì–û –ö–û–î–ê" - –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –ü–û–î–•–û–î
// =====================================================

const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');
const prisma = new PrismaClient();

// üéØ –ü–û–õ–ù–´–ô –¶–ò–ö–õ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø "–í–û–ó–î–£–®–ù–û–ô –ë–£–•–ì–ê–õ–¢–ï–†–ò–ò"
async function airborneAccountingFullTest() {
  try {
    console.log('üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–û–ó–î–£–®–ù–û–ô –ë–£–•–ì–ê–õ–¢–ï–†–ò–ò');

    // 1Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
    console.log('\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const passwordHash = await bcrypt.hash('password', 10);
    
    const admin = await prisma.users.upsert({
      where: { email: 'solar@solar.com' },
      update: {},
      create: {
        email: 'solar@solar.com',
        username: 'solar_admin',
        password_hash: passwordHash,
        first_name: 'Solar',
        last_name: 'Admin',
        role: 'ADMIN',
        is_active: true,
        email_verified: true
      }
    });
    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω:', admin.email);

    // 2Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ö–û–ú–ü–ê–ù–ò–ò SWAPOIL
    console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ SWAPOIL...');
    const company = await prisma.companies.upsert({
      where: { code: 'SWAPOIL' },
      update: {},
      create: {
        code: 'SWAPOIL',
        name: 'SWAPOIL GMBH',
        director_name: 'LEANID KANOPLICH',
        owner_id: admin.id,
        legal_entity_type: 'GMBH',
        description: '–ù–µ—Ñ—Ç—è–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è',
        is_active: true,
        setup_completed: true
      }
    });
    console.log('‚úÖ –ö–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞:', company.name, 'ID:', company.id);

    // 3Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–û–í–û–ì–û –°–ö–õ–ê–î–ê
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Å–∫–ª–∞–¥–∞...');
    const warehouse = await prisma.warehouses.upsert({
      where: { 
        company_id_code: { 
          company_id: company.id, 
          code: 'MAIN' 
        } 
      },
      update: {},
      create: {
        company_id: company.id,
        name: '–º–∞—Å–ª–æ —Ä–∞–ø—Å–æ–≤–æ–µ',
        code: 'MAIN',
        description: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥ –¥–ª—è –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤',
        is_main: true,
        is_template: true,
        status: 'ACTIVE',
        created_by: admin.id
      }
    });
    console.log('‚úÖ –°–∫–ª–∞–¥ —Å–æ–∑–¥–∞–Ω:', warehouse.name);

    // 4Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –¢–û–í–ê–†–ê-–®–ê–ë–õ–û–ù–ê
    console.log('\n4Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞-—à–∞–±–ª–æ–Ω–∞...');
    const product = await prisma.products.upsert({
      where: { 
        company_id_code: { 
          company_id: company.id, 
          code: 'OIL-001' 
        } 
      },
      update: {},
      create: {
        company_id: company.id,
        code: 'OIL-001',
        name: 'Residues technical rapeseed oil',
        description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ —Ä–∞–ø—Å–æ–≤–æ–≥–æ –º–∞—Å–ª–∞',
        unit: 't',
        price: 650.00,
        cost_price: 650.00,
        currency: 'EUR',
        vat_rate: 23.00,
        category: '–ù–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç—ã',
        is_active: true,
        is_template: true,
        batch_tracking: true,
        created_by: admin.id
      }
    });
    console.log('‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω:', product.name);

    // 5Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ü–û–°–¢–ê–í–©–ò–ö–ê-–®–ê–ë–õ–û–ù–ê
    console.log('\n5Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞-—à–∞–±–ª–æ–Ω–∞...');
    const supplier = await prisma.clients.upsert({
      where: { 
        company_id_code: { 
          company_id: company.id, 
          code: 'SUP-001' 
        } 
      },
      update: {},
      create: {
        company_id: company.id,
        name: 'ASSET BILANS SPOLKA Z O O',
        code: 'SUP-001',
        role: 'SUPPLIER',
        email: 'contact@assetbilans.pl',
        phone: '+48 123 456 789',
        is_juridical: true,
        is_active: true,
        is_template: true,
        country: 'Poland',
        legal_address: 'Warsaw, Poland',
        created_by: admin.id
      }
    });
    console.log('‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω:', supplier.name);

    // 6Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ü–û–ö–£–ü–ê–¢–ï–õ–Ø-–®–ê–ë–õ–û–ù–ê
    console.log('\n6Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è-—à–∞–±–ª–æ–Ω–∞...');
    const customer = await prisma.clients.upsert({
      where: { 
        company_id_code: { 
          company_id: company.id, 
          code: 'CUS-001' 
        } 
      },
      update: {},
      create: {
        company_id: company.id,
        name: 'SWAPOIL GMBH',
        code: 'CUS-001',
        role: 'CLIENT',
        email: 'orders@swapoil.de',
        phone: '+49 123 456 789',
        is_juridical: true,
        is_active: true,
        is_template: true,
        country: 'Germany',
        legal_address: 'Hamburg, Germany',
        created_by: admin.id
      }
    });
    console.log('‚úÖ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', customer.name);

    // 7Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –®–ê–ë–õ–û–ù–ê –ü–†–ò–•–û–î–ê
    console.log('\n7Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø—Ä–∏—Ö–æ–¥–∞...');
    const templatePurchase = await prisma.purchases.create({
      data: {
        company_id: company.id,
        document_number: 'TEMPLATE-PUR-001',
        document_date: new Date(),
        operation_type: 'PURCHASE',
        supplier_id: supplier.id,
        warehouse_id: warehouse.id,
        purchase_manager_id: admin.id,
        subtotal: 14950.00,  // 23 —Ç–æ–Ω–Ω—ã * 650 EUR
        vat_amount: 3438.50, // 23%
        total_amount: 18388.50,
        currency: 'EUR',
        payment_status: 'PENDING',
        delivery_status: 'PENDING',
        document_status: 'DRAFT',
        is_template: true,
        created_by: admin.id
      }
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π —à–∞–±–ª–æ–Ω–∞ –ø—Ä–∏—Ö–æ–¥–∞
    await prisma.purchase_items.create({
      data: {
        purchase_id: templatePurchase.id,
        product_id: product.id,
        quantity: 23.000,
        unit_price_base: 650.00,
        vat_rate: 23.00,
        vat_amount: 3438.50,
        line_total: 18388.50
      }
    });
    console.log('‚úÖ –®–∞–±–ª–æ–Ω –ø—Ä–∏—Ö–æ–¥–∞ —Å–æ–∑–¥–∞–Ω:', templatePurchase.document_number);

    // 8Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø
    console.log('\n8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...');
    const copiedPurchase = await prisma.purchases.create({
      data: {
        company_id: company.id,
        document_number: `PUR-${Date.now()}`,
        document_date: new Date(),
        operation_type: 'PURCHASE',
        supplier_id: supplier.id,
        warehouse_id: warehouse.id,
        purchase_manager_id: admin.id,
        subtotal: templatePurchase.subtotal,
        vat_amount: templatePurchase.vat_amount,
        total_amount: templatePurchase.total_amount,
        currency: 'EUR',
        payment_status: 'PENDING',
        delivery_status: 'PENDING',
        document_status: 'DRAFT',
        is_template: false,
        created_by: admin.id
      }
    });
    console.log('‚úÖ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:', copiedPurchase.document_number);

    // 9Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
    console.log('\nüéä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log(`üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${admin.email}`);
    console.log(`üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${company.name} (ID: ${company.id})`);
    console.log(`üè™ –°–∫–ª–∞–¥: ${warehouse.name}`);
    console.log(`üì¶ –¢–æ–≤–∞—Ä: ${product.name}`);
    console.log(`üè≠ –ü–æ—Å—Ç–∞–≤—â–∏–∫: ${supplier.name}`);
    console.log(`üè¢ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${customer.name}`);
    console.log(`üìã –®–∞–±–ª–æ–Ω –ø—Ä–∏—Ö–æ–¥–∞: ${templatePurchase.document_number}`);
    console.log(`üîÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏—Ö–æ–¥: ${copiedPurchase.document_number}`);
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('üöÄ "–í–û–ó–î–£–®–ù–ê–Ø –ë–£–•–ì–ê–õ–¢–ï–†–ò–Ø" –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!');

    // üîü –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê
    console.log('\nüîë –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê –í –°–ò–°–¢–ï–ú–£:');
    console.log(`Email: ${admin.email}`);
    console.log('Password: password');
    console.log(`–ö–æ–º–ø–∞–Ω–∏—è: ${company.name}`);
    console.log('URL: http://localhost:5173');

    await prisma.$disconnect();
    return {
      admin,
      company,
      warehouse,
      product,
      supplier,
      customer,
      templatePurchase,
      copiedPurchase
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    await prisma.$disconnect();
    throw error;
  }
}

// üéØ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
if (require.main === module) {
  airborneAccountingFullTest()
    .then(() => {
      console.log('\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      console.log('üöÄ –ú–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\n‚ùå –û—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { airborneAccountingFullTest };