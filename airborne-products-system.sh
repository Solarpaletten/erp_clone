#!/bin/bash

# =====================================================
# üöÄ –í–û–ó–î–£–®–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –ü–†–û–î–£–ö–¢–û–í
# –§–∏—Ä–º–µ–Ω–Ω–∞—è —Ñ–∏—à–∫–∞ - –æ–¥–∏–Ω –∫–ª–∏–∫ –∏ –≥–æ—Ç–æ–≤–æ!
# =====================================================

echo "üöÄ –°–û–ó–î–ê–ù–ò–ï –í–û–ó–î–£–®–ù–û–ô –°–ò–°–¢–ï–ú–´ –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –ü–†–û–î–£–ö–¢–û–í..."
echo "‚ö° –§–∏—Ä–º–µ–Ω–Ω–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: —Ç–æ–ø–Ω—É–ª –∏ —É —Ç–µ–±—è –≥–æ—Ç–æ–≤ –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä!"

cd "$(dirname "$0")"

# =====================================================
# 1. FLOATING COPY BUTTON –î–õ–Ø –ü–†–û–î–£–ö–¢–û–í
# =====================================================

echo "üì± –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–≤–∞—é—â–µ–π –∫–Ω–æ–ø–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."

mkdir -p frontend/src/pages/company/products/components

cat > frontend/src/pages/company/products/components/AirborneProductCopy.tsx << 'EOF'
import React, { useState, useEffect } from 'react';
import { Copy, Zap, Plus, Loader, Check, X } from 'lucide-react';
import { api } from '../../../../api/axios';

interface Product {
  id: number;
  name: string;
  code: string;
  price: number;
  category?: string;
}

interface AirborneProductCopyProps {
  onProductCreated: () => void;
}

const AirborneProductCopy: React.FC<AirborneProductCopyProps> = ({ onProductCreated }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [products, setProducts] = useState<Product[]>([]);
  const [loading, setLoading] = useState(false);
  const [copying, setCopying] = useState<number | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  useEffect(() => {
    if (isOpen) {
      loadProducts();
    }
  }, [isOpen]);

  const loadProducts = async () => {
    setLoading(true);
    try {
      const response = await api.get('/api/company/products');
      setProducts(response.data.products || []);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleAirborneCopy = async (productId: number, productName: string) => {
    setCopying(productId);
    
    try {
      const response = await api.post(`/api/company/products/${productId}/copy`);
      
      if (response.data.success) {
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —É—Å–ø–µ—Ö–µ
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg z-50 animate-bounce';
        notification.innerHTML = `
          <div class="flex items-center gap-2">
            <span class="text-xl">‚úàÔ∏è</span>
            <div>
              <div class="font-bold">–í–æ–∑–¥—É—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!</div>
              <div class="text-sm">–¢–æ–≤–∞—Ä "${productName}" –≥–æ—Ç–æ–≤</div>
            </div>
          </div>
        `;
        document.body.appendChild(notification);
        
        // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 3000);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        onProductCreated();
        setIsOpen(false);
      }
    } catch (error: any) {
      alert(`–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.response?.data?.error || error.message}`);
    } finally {
      setCopying(null);
    }
  };

  return (
    <>
      {/* –ì–õ–ê–í–ù–ê–Ø –ü–õ–ê–í–ê–Æ–©–ê–Ø –ö–ù–û–ü–ö–ê */}
      <div className="fixed bottom-6 right-6 z-50">
        <button
          onClick={() => setIsOpen(true)}
          className="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-full shadow-2xl hover:shadow-3xl hover:scale-110 transition-all duration-300 flex items-center justify-center group"
          title="–í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤"
        >
          <div className="relative">
            <Copy className="w-8 h-8" />
            <Zap className="w-4 h-4 absolute -top-1 -right-1 animate-pulse text-yellow-300" />
          </div>
        </button>
        
        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
        <div className="absolute -top-12 right-0 bg-black text-white px-3 py-1 rounded text-sm whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity">
          –í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
        </div>
      </div>

      {/* –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –í–´–ë–û–†–ê –¢–û–í–ê–†–ê */}
      {isOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[80vh] overflow-hidden">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="flex items-center justify-between p-6 border-b bg-gradient-to-r from-blue-50 to-purple-50">
              <div className="flex items-center gap-3">
                <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                  <Copy className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h2 className="text-2xl font-bold text-gray-900">–í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
                  <p className="text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                </div>
              </div>
              <button
                onClick={() => setIsOpen(false)}
                className="p-2 hover:bg-white hover:bg-opacity-50 rounded-lg transition-colors"
              >
                <X className="w-5 h-5" />
              </button>
            </div>

            {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
            <div className="p-6 max-h-96 overflow-y-auto">
              {loading ? (
                <div className="flex items-center justify-center p-8">
                  <Loader className="w-8 h-8 animate-spin text-blue-500" />
                  <span className="ml-2">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</span>
                </div>
              ) : (
                <div className="grid gap-3">
                  {products.map((product) => (
                    <div
                      key={product.id}
                      className="flex items-center justify-between p-4 border rounded-lg hover:bg-blue-50 transition-colors group"
                    >
                      <div className="flex-1">
                        <div className="font-medium text-gray-900">{product.name}</div>
                        <div className="text-sm text-gray-500">
                          –ö–æ–¥: {product.code} ‚Ä¢ {product.price}‚Ç¨
                          {product.category && ` ‚Ä¢ ${product.category}`}
                        </div>
                      </div>
                      
                      <button
                        onClick={() => handleAirborneCopy(product.id, product.name)}
                        disabled={copying === product.id}
                        className="px-6 py-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-200 flex items-center gap-2 min-w-32"
                      >
                        {copying === product.id ? (
                          <>
                            <Loader className="w-4 h-4 animate-spin" />
                            <span>–ö–æ–ø–∏—Ä—É–µ–º...</span>
                          </>
                        ) : (
                          <>
                            <Zap className="w-4 h-4" />
                            <span>–¢–æ–ø–Ω—É—Ç—å</span>
                          </>
                        )}
                      </button>
                    </div>
                  ))}
                  
                  {products.length === 0 && !loading && (
                    <div className="text-center p-8 text-gray-500">
                      <Copy className="w-16 h-16 mx-auto mb-4 text-gray-300" />
                      <p>–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                      <p className="text-sm mt-2">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
                    </div>
                  )}
                </div>
              )}
            </div>

            {/* –ü–æ–¥–≤–∞–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
            <div className="px-6 py-4 bg-gray-50 border-t">
              <div className="flex items-center gap-2 text-sm text-gray-600">
                <Zap className="w-4 h-4 text-blue-500" />
                <span>–í–æ–∑–¥—É—à–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: –æ–¥–∏–Ω –∫–ª–∏–∫ = –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</span>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default AirborneProductCopy;
EOF

# =====================================================
# 2. TOOLBAR –ö–ù–û–ü–ö–ê –î–õ–Ø DESKTOP
# =====================================================

echo "üñ•Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ toolbar –∫–Ω–æ–ø–∫–∏ –¥–ª—è desktop..."

cat > frontend/src/pages/company/products/components/AirborneToolbarButton.tsx << 'EOF'
import React, { useState } from 'react';
import { Copy, Zap, ChevronDown } from 'lucide-react';
import { api } from '../../../../api/axios';

interface AirborneToolbarButtonProps {
  onProductCreated: () => void;
}

const AirborneToolbarButton: React.FC<AirborneToolbarButtonProps> = ({ onProductCreated }) => {
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [recentProducts, setRecentProducts] = useState<any[]>([]);

  const loadRecentProducts = async () => {
    try {
      const response = await api.get('/api/company/products?limit=5&sort=created_at');
      setRecentProducts(response.data.products || []);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    }
  };

  const handleQuickCopy = async (productId: number, productName: string) => {
    try {
      const response = await api.post(`/api/company/products/${productId}/copy`);
      
      if (response.data.success) {
        // –ü–æ–∫–∞–∑–∞—Ç—å success toast
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50';
        toast.textContent = `‚úàÔ∏è –¢–æ–≤–∞—Ä "${productName}" –≤–æ–∑–¥—É—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!`;
        document.body.appendChild(toast);
        
        setTimeout(() => document.body.removeChild(toast), 3000);
        
        onProductCreated();
        setIsDropdownOpen(false);
      }
    } catch (error: any) {
      alert(`–û—à–∏–±–∫–∞: ${error.response?.data?.error || error.message}`);
    }
  };

  const handleDropdownToggle = () => {
    if (!isDropdownOpen) {
      loadRecentProducts();
    }
    setIsDropdownOpen(!isDropdownOpen);
  };

  return (
    <div className="relative">
      <button
        onClick={handleDropdownToggle}
        className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-4 py-2 rounded-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-200 flex items-center gap-2 shadow-md hover:shadow-lg"
      >
        <Zap className="w-4 h-4" />
        <span className="hidden sm:inline">–í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
        <span className="sm:hidden">–¢–æ–ø–Ω—É—Ç—å</span>
        <ChevronDown className={`w-4 h-4 transition-transform ${isDropdownOpen ? 'rotate-180' : ''}`} />
      </button>

      {isDropdownOpen && (
        <>
          {/* Backdrop */}
          <div 
            className="fixed inset-0 z-10" 
            onClick={() => setIsDropdownOpen(false)}
          />
          
          {/* Dropdown */}
          <div className="absolute top-full mt-2 right-0 bg-white rounded-lg shadow-xl border w-80 z-20">
            <div className="p-3 border-b bg-gray-50 rounded-t-lg">
              <div className="flex items-center gap-2">
                <Copy className="w-4 h-4 text-blue-500" />
                <span className="font-medium text-gray-900">–ë—ã—Å—Ç—Ä–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
              </div>
            </div>
            
            <div className="max-h-64 overflow-y-auto">
              {recentProducts.map((product) => (
                <div
                  key={product.id}
                  className="p-3 hover:bg-blue-50 border-b last:border-b-0 cursor-pointer transition-colors"
                  onClick={() => handleQuickCopy(product.id, product.name)}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex-1 min-w-0">
                      <div className="font-medium text-gray-900 truncate">{product.name}</div>
                      <div className="text-sm text-gray-500">
                        {product.code} ‚Ä¢ {product.price}‚Ç¨
                      </div>
                    </div>
                    <div className="ml-2 text-blue-500 hover:text-blue-700">
                      <Zap className="w-4 h-4" />
                    </div>
                  </div>
                </div>
              ))}
              
              {recentProducts.length === 0 && (
                <div className="p-4 text-center text-gray-500">
                  <p>–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                </div>
              )}
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default AirborneToolbarButton;
EOF

# =====================================================
# 3. –û–ë–ù–û–í–õ–ï–ù–ò–ï BACKEND
# =====================================================

echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ backend controller..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ copyProduct —Ñ—É–Ω–∫—Ü–∏–∏
if ! grep -q "copyProduct" backend/src/controllers/company/productsController.js; then
  cat >> backend/src/controllers/company/productsController.js << 'EOF'

// =====================================================
// ‚úàÔ∏è –í–û–ó–î–£–®–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –¢–û–í–ê–†–û–í
// =====================================================
const copyProduct = async (req, res) => {
  try {
    const { id } = req.params;
    const companyId = req.companyContext.companyId;
    const userId = req.user?.id || 1;

    // –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä
    const original = await prismaManager.client.products.findFirst({
      where: { id: parseInt(id), company_id: companyId }
    });

    if (!original) {
      return res.status(404).json({
        success: false,
        error: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'
      });
    }

    // –í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ - —Å–æ–∑–¥–∞–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
    const timestamp = Date.now();
    const newCode = `${original.code}_${timestamp}`;
    
    const copy = await prismaManager.client.products.create({
      data: {
        code: newCode,
        name: `${original.name} (–ö–æ–ø–∏—è)`,
        description: original.description || '',
        unit: original.unit,
        price: original.price,
        cost_price: original.cost_price || original.price,
        currency: original.currency || 'EUR',
        vat_rate: original.vat_rate || 0,
        category: original.category || '',
        min_stock: original.min_stock || 0,
        current_stock: 0,
        is_active: true,
        is_service: original.is_service || false,
        company_id: companyId,
        created_by: userId
      }
    });

    logger.info(`‚úàÔ∏è Airborne copy: ${original.code} -> ${newCode}`);

    res.json({
      success: true,
      message: `–¢–æ–≤–∞—Ä –≤–æ–∑–¥—É—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É!`,
      data: copy,
      airborne: {
        originalId: original.id,
        copyId: copy.id,
        timeSaved: '5 –º–∏–Ω—É—Ç',
        method: '–í–æ–∑–¥—É—à–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞'
      }
    });

  } catch (error) {
    logger.error('‚ùå Airborne copy failed:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è'
    });
  }
};
EOF

  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —ç–∫—Å–ø–æ—Ä—Ç—ã –µ—Å–ª–∏ –Ω–µ—Ç
  if ! grep -q "copyProduct" backend/src/controllers/company/productsController.js | grep "module.exports"; then
    sed -i.bak 's/module\.exports = {/module.exports = {\n  copyProduct,/' backend/src/controllers/company/productsController.js
  fi
fi

# –î–æ–±–∞–≤–ª—è–µ–º route –µ—Å–ª–∏ –Ω–µ—Ç
if ! grep -q "/copy" backend/src/routes/company/productsRoutes.js; then
  sed -i.bak '/module\.exports/i\
// ‚úàÔ∏è POST /api/company/products/:id/copy - –í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ\
router.post("/:id/copy", productsController.copyProduct);\
' backend/src/routes/company/productsRoutes.js
fi

# =====================================================
# 4. –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–ò
# =====================================================

cat > AIRBORNE_INTEGRATION.md << 'EOF'
# ‚úàÔ∏è –í–û–ó–î–£–®–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –ü–†–û–î–£–ö–¢–û–í

## üéØ –ö–æ–Ω—Ü–µ–ø—Ü–∏—è:
"–¢–æ–ø–Ω—É–ª –∏ —É —Ç–µ–±—è –≥–æ—Ç–æ–≤ –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä!" - —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è —Ñ–∏—à–∫–∞ —Å–∏—Å—Ç–µ–º—ã

## üì± –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:

### 1. AirborneProductCopy.tsx - –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞
- –ë–æ–ª—å—à–∞—è –∑–∞–º–µ—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É
- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–æ–≤
- –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

### 2. AirborneToolbarButton.tsx - Desktop –∫–Ω–æ–ø–∫–∞  
- –ö–Ω–æ–ø–∫–∞ –≤ toolbar —Ä—è–¥–æ–º —Å "Add Product"
- Dropdown —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
- –ë—ã—Å—Ç—Ä–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

## üîß –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:

### –í ProductsPage.tsx –¥–æ–±–∞–≤–∏—Ç—å:
```typescript
import AirborneProductCopy from './components/AirborneProductCopy';
import AirborneToolbarButton from './components/AirborneToolbarButton';

// –í toolbar (–≤ ProductsToolbar –∫–æ–º–ø–æ–Ω–µ–Ω—Ç):
<AirborneToolbarButton onProductCreated={fetchProducts} />

// –í –∫–æ–Ω—Ü–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:
<AirborneProductCopy onProductCreated={fetchProducts} />
```

### –í ProductsToolbar.tsx –æ–±–Ω–æ–≤–∏—Ç—å:
```typescript
<div className="flex items-center gap-3">
  <button onClick={onAddProduct} className="...">
    Add Product
  </button>
  
  <AirborneToolbarButton onProductCreated={onRefresh} />
</div>
```

## üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç:
1. **Desktop**: –ö–Ω–æ–ø–∫–∞ "–í–æ–∑–¥—É—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ" —Å dropdown
2. **Mobile**: –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º
3. **UX**: –û–¥–∏–Ω –∫–ª–∏–∫ -> –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä -> –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
4. **–§–∏—à–∫–∞**: –û—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ - "—Ç–æ–ø–Ω—É–ª –∏ –≥–æ—Ç–æ–≤–æ"

## ‚úàÔ∏è Airborne Experience:
- –ö–ª–∏–∫ -> –ê–Ω–∏–º–∞—Ü–∏—è -> –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "–≤–æ–∑–¥—É—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ"
- –§–æ–Ω: –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã blue-to-purple  
- –ò–∫–æ–Ω–∫–∏: Copy + Zap –¥–ª—è "–≤–æ–∑–¥—É—à–Ω–æ—Å—Ç–∏"
- –¢–µ–∫—Å—Ç—ã: "—Ç–æ–ø–Ω—É—Ç—å", "–≤–æ–∑–¥—É—à–Ω–æ", "–∑–∞ 1 —Å–µ–∫—É–Ω–¥—É"
EOF

echo ""
echo "‚úÖ –í–û–ó–î–£–®–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –°–û–ó–î–ê–ù–ê!"
echo "‚úàÔ∏è –§–∏—Ä–º–µ–Ω–Ω–∞—è —Ñ–∏—à–∫–∞ –≥–æ—Ç–æ–≤–∞: —Ç–æ–ø–Ω—É–ª –∏ —É —Ç–µ–±—è –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä!"
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:"
echo "  - AirborneProductCopy.tsx (–ø–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞)"  
echo "  - AirborneToolbarButton.tsx (desktop –∫–Ω–æ–ø–∫–∞)"
echo "  - Backend copyProduct —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
echo ""
echo "üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:"
echo "  - –ë–æ–ª—å—à–∏–µ –∑–∞–º–µ—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"
echo "  - –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö"
echo "  - –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" 
echo "  - –í–æ–∑–¥—É—à–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∏ —Å—Ç–∏–ª—å"
echo ""
echo "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: AIRBORNE_INTEGRATION.md"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ ProductsPage!"