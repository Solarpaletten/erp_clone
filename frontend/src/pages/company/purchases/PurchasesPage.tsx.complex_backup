import React, { useState, useEffect } from 'react';

interface Purchase {
  id: number;
  date: string;
  supplier: string;
  product: string;
  quantity: number;
  price: number;
  total: number;
  status: string;
}

const PurchasesPage: React.FC = () => {
  const [purchases, setPurchases] = useState<Purchase[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–∫–∞–∫ –≤ ProductsPage)
    setTimeout(() => {
      setPurchases([
        {
          id: 1,
          date: '2025-08-06',
          supplier: 'ASSET LOGISTICS GMBH',
          product: 'RESIDUES TECHNICAL OIL',
          quantity: 25,
          price: 700,
          total: 17500,
          status: 'Completed'
        }
      ]);
      setLoading(false);
    }, 1000);
  }, []);

  const handleAddPurchase = () => {
    const newPurchase: Purchase = {
      id: purchases.length + 1,
      date: new Date().toISOString().split('T')[0],
      supplier: 'New Supplier',
      product: 'RESIDUES TECHNICAL OIL',
      quantity: 10,
      price: 750,
      total: 7500,
      status: 'Pending'
    };
    
    setPurchases([...purchases, newPurchase]);
    console.log('üõí Purchase added - should update warehouse!');
  };

  if (loading) {
    return (
      <div className="p-6">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-1/4 mb-4"></div>
          <div className="h-4 bg-gray-200 rounded w-1/2 mb-8"></div>
          <div className="space-y-3">
            <div className="h-4 bg-gray-200 rounded"></div>
            <div className="h-4 bg-gray-200 rounded"></div>
            <div className="h-4 bg-gray-200 rounded"></div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="p-6">
      {/* Header - –ø—Ä–æ—Å—Ç–æ–π –∫–∞–∫ –≤ ProductsPage */}
      <div className="bg-blue-600 text-white p-6 rounded-lg mb-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold mb-2">üõí Purchases Management</h1>
            <p className="text-blue-100">Manage purchase orders and supplier relationships</p>
          </div>
          <div className="text-right">
            <p className="text-blue-100 text-sm">Support (FAQ: 15)</p>
          </div>
        </div>
      </div>

      {/* Stats Cards - –ø—Ä–æ—Å—Ç—ã–µ –∫–∞–∫ –≤ ProductsPage */}
      <div className="grid grid-cols-1 md:grid-cols-5 gap-6 mb-6">
        <div className="bg-white p-4 rounded-lg shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Total</p>
              <p className="text-2xl font-bold text-gray-900">{purchases.length}</p>
              <p className="text-xs text-gray-500">Purchases</p>
            </div>
            <div className="text-blue-500 text-2xl">üõí</div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Completed</p>
              <p className="text-2xl font-bold text-green-600">
                {purchases.filter(p => p.status === 'Completed').length}
              </p>
              <p className="text-xs text-gray-500">Orders</p>
            </div>
            <div className="text-green-500 text-2xl">‚úÖ</div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Pending</p>
              <p className="text-2xl font-bold text-orange-600">
                {purchases.filter(p => p.status === 'Pending').length}
              </p>
              <p className="text-xs text-gray-500">Orders</p>
            </div>
            <div className="text-orange-500 text-2xl">‚è≥</div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Total Value</p>
              <p className="text-2xl font-bold text-gray-900">
                ‚Ç¨{purchases.reduce((sum, p) => sum + p.total, 0).toLocaleString()}
              </p>
              <p className="text-xs text-gray-500">EUR</p>
            </div>
            <div className="text-purple-500 text-2xl">üí∞</div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Suppliers</p>
              <p className="text-2xl font-bold text-gray-900">
                {new Set(purchases.map(p => p.supplier)).size}
              </p>
              <p className="text-xs text-gray-500">Active</p>
            </div>
            <div className="text-teal-500 text-2xl">üè≠</div>
          </div>
        </div>
      </div>

      {/* Action Button */}
      <div className="mb-6">
        <button
          onClick={handleAddPurchase}
          className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 flex items-center gap-2"
        >
          <span className="text-lg">‚ûï</span>
          Add Purchase
        </button>
      </div>

      {/* Table - –ø—Ä–æ—Å—Ç–∞—è –∫–∞–∫ –≤ ProductsPage */}
      <div className="bg-white rounded-lg shadow overflow-hidden">
        <div className="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
          <h3 className="text-lg font-medium text-gray-900">Recent Purchases</h3>
          <button className="text-blue-600 hover:text-blue-800">
            üîÑ Refresh
          </button>
        </div>

        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Date
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Supplier
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Product
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Quantity
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Price
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Total
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Status
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {purchases.map((purchase) => (
                <tr key={purchase.id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {purchase.date}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {purchase.supplier}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {purchase.product}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {purchase.quantity} T
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    ‚Ç¨{purchase.price}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                    ‚Ç¨{purchase.total.toLocaleString()}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                      purchase.status === 'Completed' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-orange-100 text-orange-800'
                    }`}>
                      {purchase.status}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <button className="text-blue-600 hover:text-blue-800 mr-3">
                      ‚úèÔ∏è
                    </button>
                    <button className="text-red-600 hover:text-red-800">
                      üóëÔ∏è
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          {purchases.length === 0 && (
            <div className="text-center py-12">
              <div className="text-gray-400 text-4xl mb-4">üõí</div>
              <p className="text-gray-500">No purchases found</p>
              <button 
                onClick={handleAddPurchase}
                className="mt-4 text-blue-600 hover:text-blue-800"
              >
                Add your first purchase
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default PurchasesPage;
